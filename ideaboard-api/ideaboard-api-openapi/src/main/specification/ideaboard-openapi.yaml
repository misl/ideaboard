openapi: 3.0.2
info:
  title: IdeaBoard Rest API
  description: >-
    This API describes the HTTP interface of IdeaBoard. Using this interface
    it is possible to create, modify and delete idea cards.
  version: ${project.version}
  contact:
    email: minto@xup.nl
tags:
  - name: Idea
    description: All idea related operations

paths:
  '/ideas':
    get:
      tags:
        - Idea
      summary: Retrieves the ideas.
      description: >-
        Retrieves all ideas.
      operationId: getIdeas
      responses:
        '200':
          description: >-
            Array with ideas.
          content:
            application/json:
              schema:
                $ref: 'model/Ideas.yaml#/Ideas'
            application/xml:
              schema:
                $ref: 'model/Ideas.yaml#/Ideas'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'

    post:
      tags:
        - Idea
      summary: Adds a new idea to the board.
      description: >-
        Create a new idea and adds it to the repository.
      operationId: createIdea
      requestBody:
        description: >-
          Data regarding the new idea entry.
        required: true
        content:
          application/json:
            schema:
              $ref: 'model/Idea.yaml#/Idea'
          application/xml:
            schema:
              $ref: 'model/Idea.yaml#/Idea'
      responses:
        '201':
          description: >-
            Create has been accepted.
          headers:
            Location:
              description: Gives the location of the newly create idea.
              schema:
                type: string
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'

  '/ideas/{ideaId}':
    get:
      tags:
        - Idea
      summary: Retrieves an existing idea.
      description: >-
        Retrieves all details of an idea.
      operationId: getIdea
      parameters:
        - $ref: '#/components/parameters/ideaId'
      responses:
        '200':
          description: >-
            Request for analysis has been accepted.
          content:
            application/json:
              schema:
                $ref: 'model/Idea.yaml#/Idea'
            application/xml:
              schema:
                $ref: 'model/Idea.yaml#/Idea'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - Idea
      summary: Updates an existing idea.
      description: >-
        Update an idea already present with new data.
      operationId: updateIdea
      parameters:
        - $ref: '#/components/parameters/ideaId'
      requestBody:
        description: >-
          Updated data of an already existing idea.
        required: true
        content:
          application/json:
            schema:
              $ref: 'model/Idea.yaml#/Idea'
          application/xml:
            schema:
              $ref: 'model/Idea.yaml#/Idea'
      responses:
        '200':
          description: >-
            Update has been accepted.
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Idea
      summary: Removes an existing idea.
      description: >-
        Removes an idea already present.
      operationId: removeIdea
      parameters:
        - $ref: '#/components/parameters/ideaId'
      responses:
        '200':
          description: >-
            The idea has been removed. Also the removed data is returned.
          content:
            application/json:
              schema:
                $ref: 'model/Idea.yaml#/Idea'
            application/xml:
              schema:
                $ref: 'model/Idea.yaml#/Idea'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  parameters:
    ideaId:
      name: ideaId
      in: path
      description: Specifies the idea id to which the operation applies.
      required: true
      schema:
        type: string
  responses:
    NotFound:
      description: >-
        The requested resource could not be found but may be available in the
        future. Subsequent requests by the client are permissible.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
    Unauthenticated:
      description: >-
        Unauthorized - This often means 'Unauthenticated', the client needs to
        authenticate before requests will be accepted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
    Unauthorized:
      description: >-
        Forbidden - the user is not authorized to perform the access the
        requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
  schemas:
    ProblemResponse: # For details see: https://tools.ietf.org/html/rfc7807
      type: object
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          type: string
          description: >-
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem. It may or may not yield further information if
            dereferenced.
        # Extensions
        # None yet
